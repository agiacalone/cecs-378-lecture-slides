---
title: "Lecture Set 2: Cryptography"
output: ioslides_presentation
---

# Cryptography

### Chapters 2, 20, 21

## What is Cryptography?

Cryptography is the study of techniques for secure communication in the presence of third parties, which are referred to as adversaries

Modern cryptography is not necessary synonymous with encryption, which is the technique of securing a message against adversaries

A cipher (or cypher) is a pair of algorithms that can create the encryption and the reversing decryption

## Encryption Techniques

Regardless of how advanced many of the encryption techniques seem, all of them ultimately boil down to the use of two different methods:

-   Substitution
    -   Swapping one letter for another
-   Transposition
    -   Rearranging the relative position of one letter for another

## Encryption Techniques (2)

We can also categorize encryption techniques by several different means:

-   The number of keys used
    -   Symmetric
        -   Sender and receiver use the same key
    -   Asymmetric
        -   Sender and receiver use different keys
-   The way plaintext is processed
    -   Block Ciphers
        -   Processes input one block of elements at a time
    -   Stream Ciphers
        -   Continuously process elements as they arrive

## Cryptographical Eras

In the computer age, we typically divide up cryptographic techniques into two main eras:

-   Classical cryptographical era
    -   All methods of analog encryption, and mostly used in the pre-WWII historical eras
-   Modern cryptographical era
    -   Virtually all forms of digital encryption since WWII, and encompasses the majority of methods we will discuss in this course

## History of Cryptography

Interestingly, cryptography has a long and rich history:

-   The Caesar Cipher
    -   One of the oldest forms of encryption, rumored to be used by Julius Caesar himself; he would encrypt messages to his legion commanders by employing a simple letter shift of three letters across the alphabet set.
    -   Internet forums also commonly use a form of Caesar cipher to hide "spoilers" in the form of ROT13 (meaning, 13 rotations instead of 3)\*.

#### \* There's also an old joke on the internet that states the best form of encryption for all of the most sensitive documents is ROT26... {.smaller}

## Caesar Cipher

Let's use Caesar Cipher to "encrypt" a phrase...

```{r Caesar Cipher, echo=TRUE}
library(caesar)
caesar_ptext <- 'Comp Security is the best class on campus'
caesar_output <- caesar(caesar_ptext, shift = 13)
caesar_output
caesar_decrypt <- caesar(caesar_output, shift = 13, decrypt = TRUE)
caesar_decrypt
```

## History of Cryptography (2)

-   Substitution Cipher

    -   While technically the Caesar cipher is a form of substitution cipher, cryptographers typically reserve the phrase for slightly more advanced forms of crypto. Substitution ciphers involve replacing letters with differing letters.

    ```{r, Sub Cipher, echo=TRUE}
    sub_ptext <- 'CECS IS THE BEST'
    alpha <- 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    key   <- 'ZGYHXIWJVKULTMSARBQCPDOENF'
    ctext <- chartr(alpha, key, sub_ptext)
    dtext <- chartr(key, alpha, ctext)
    ctext
    dtext
    ```

## History of Cryptography (3)

-   Book Cipher
    -   Each word in the secret message would be replaced with a number which represents the same word in the book. For example, if the word "attack" appeared in the book as word number `713`, then "attack" would be replaced with this number. The result would be an encoded message that looked something like this:

        713 23 245 45 124 1269 586 443 8 234

To decipher the message you simply count the number of words in the book and write down each one.

## History of Cryptography (4)

Case Study: The Enigma Machine

## Symmetric Encryption

-   The universal technique for providing confidentiality for transmitted or stored data.
-   Also referred to as conventional encryption or single-key encryption
-   Requirements for secure use:
    -   Need a strong encryption algorithm
    -   Sender and receiver must have copies of the same key and that key
    -   The key must remain private and secure from other parties

## Symmetric Encryption (2)

Symmetric encryption is not invulnerable by a long shot. There are two main methods of attacking any form of symmetric encryption:

-   Cryptanalytic attacks
    -   Rely on some knowledge of the underlying algorithm
    -   Can also use the encrypted text against itself in an attack by looking for patterns
-   Brute-force attacks
    -   Attacker attempts to try all possible keys on the ciphertext until a pattern emerges
    -   On average, half of all keys must be tried (referred to as the "half life" of the algorithm)

## Symmetric Encryption (3)

Symmetric encryption can further be attacked by making use of the ciphertext itself. Every message has inherent patterns in it, no matter how complex the encryption, and we can derive some information about the message itself without ever having to crack it.

-   Ciphertext only
    -   If a ball fell from space with a message in an alien language on it, we would have no idea how to translate the contents of that message. Rarely will we ever encounter such a thing on Earth. This is an example of only knowing the ciphertext.
-   Known plaintext
    -   More often, we will have some idea about the message we are attempting to decrypt, even if it is only the language the plaintext message will be in. We also might know the rough type of encryption that was used to secure that message.
-   Chosen plaintext
    -   Maybe we are fortunate to have a greater idea about what the message plaintext should say. Is it a secret message to a foreign agent? Is it a shopping list? We can use that knowledge to further analyze the message.
-   Chosen ciphertext
    -   We might also have a bit of insight as to how the message was encrypted. Was the message encrypted using DES? AES? What kinds of computing machines were used? We can also use that knowledge for our cracking benefit.
-   Chosen text
    -   Finally, we may have some understanding about what things should be contained within the message. If it's a message from a secret agent, it's highly unlikely that it is his Amazon wish list, and more likely that the message contains something about international secrets. Even better if we know the general gist of the message.

## What makes Computationally-Secure Encryption?

We can never have truly secure encryption. Any encryption that we deploy will always have faults and insecurities. So, how do we know if the encryption we are using is secure enough?

-   Encryption is computationally secure if:
    -   Cost of breaking cipher exceeds value of information
    -   Time required to break cipher exceeds the useful lifetime of the information
    -   Usually very difficult to estimate the amount of effort required to break
    -   Helps to estimate time and cost of a brute-force attack

## Symmetric Encryption Compared

```{r echo=FALSE}
tab <- matrix(c(64,64,128,64,64,128,56,168,"128-512 and up"), ncol=3, byrow=TRUE)
colnames(tab) <- c("DES", "3DES", "AES")
rownames(tab) <- c("Plaintext block size","Ciphertext block size", "Key size")
tab <- as.table(tab)
tab
```

#### DES = Data Encryption Standard

#### AES = Advanced Encryption Standard

#### \* All sizes are in bits

## Symmetric Encryption Compared (2)

Key Size (bits) Cipher Number of Keys T(10\^9) dec/sec T(10\^13) dec/sec

## Thought Experiment: Life Expectancy of the Sun

### life expectancy of the sun

*Consider*: Our weakest form of AES encryption has a half life of `5.3*10^17` years with a modern supercomputer. If the sun will only last roughly `1*10^10` years, why do we need encryption that lasts longer than that? Discuss.

## Types of Symmetric Encryption
